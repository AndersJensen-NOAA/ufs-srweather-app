#!/bin/ksh
set -xa

export RUN_ENVIR=${RUN_ENVIR:-emc}
export PS4='$SECONDS + '
date


# #########################################
# SETUP GFS/GDAS FCST PROCESSING VARIABLES
# #########################################
if [ $RUN_ENVIR = nco ]; then
    . $NWROOT/gfs.${gfs_ver}/parm/config/config.base.nco
else
    . $EXPDIR/config.base
fi
. $PARMgfs/config/config.anal
status=$?
[[ $status -ne 0 ]] && exit $status


# #########################################
# SOURCE MACHINE RUNTIME ENVIRONMENT
# #########################################
. $HOMEgfs/env/${machine}.env anal
status=$?
[[ $status -ne 0 ]] && exit $status


# #########################################
# RUN TYPE - PRODUCTION OR DEVELOPMENT
# #########################################
export envir=${envir:-prod}


# #########################################
# SPECIFY NET AND RUN NAME AND MODEL
# #########################################
export NET=${NET:-gfs}
export RUN=${RUN:-gfs}


# ######################################################
# OBTAIN UNIQUE PROCESS ID (PID) AND MAKE TEMP DIRECTORY
# ######################################################
export pid=${pid:-$$}
export DATAROOT=${DATAROOT:-/gpfs/hps2/nco/ops/tmpnwprd}
if [ $RUN_ENVIR = nco ]; then
    export DATA=${DATA:-$DATAROOT/${job}.${pid}}
else
    export DATA=$RUNDIR/$CDATE/$CDUMP/anal
fi
[[ -d $DATA ]] && rm -rf $DATA
mkdir -p $DATA
cd $DATA


# #########################################
# FILE To LOG MSGS
# #########################################
export jlogfile=${jlogfile:-$COMROOT/logs/jlogfiles/jlogfile.${job}.${pid}}


# #########################################
# DETERMINE JOB OUTPUT NAME ON SYSTEM
# #########################################
export outid="LL$job"
export jobid="${outid}.o${pid}"
export pgmout="OUTPUT.${pid}"
export pgmerr=errfile

export VERBOSE=${VERBOSE:-YES}
export ERRSCRIPT=err_chk
export LOGSCRIPT=startmsg
export REDOUT='1>>'
export REDERR='2>'


# #########################################
# SENDECF  - Flag EVENTS ON ECF
# SENDCOM  - COPY FILES FROM TMPDIR TO $COMOUT
# SENDDBN  - ISSUE DBNET CLIENT CALLS
# #########################################
export SENDECF=${SENDECF:-YES}
export SENDCOM=${SENDCOM:-YES}
export SENDDBN=${SENDDBN:-YES}


# #########################################
# RUN SETPDY AND INITIALIZE PDY VARIABLES
# #########################################
if [ $RUN_ENVIR = nco ]; then
    setpdy.sh
    . PDY
else
    PDY=$(echo $CDATE | cut -c1-8)
    cyc=$(echo  $CDATE | cut -c9-10)
fi
GDATE=$($NDATE -$assim_freq $CDATE)
gymd=$(echo $GDATE | cut -c1-8)
ghh=$(echo  $GDATE | cut -c9-10)

export cyc=${cyc:-00}
export cycle=t${cyc}z


# #########################################
# DEFINE COM DIRECTORIES
# #########################################
mkdir -m 775 -p $COMOUT

if [ $RUN_ENVIR = nco ]; then
    export ROTDIR=${COMROOT:?}/${NET}/${envir}   
    export COMIN=${COMIN:-${COMROOT:?}/${NET}/${envir}/${RUN}.${PDY}/${cyc}}
    export COMOUT=${COMOUT:-${COMROOT:?}/${NET}/${envir}/${RUN}.${PDY}/${cyc}}
fi
mkdir -m 775 -p $COMOUT


# #########################################
# DEFINE FIRST GUESS PATH
# #########################################
export COMIN_GES="$ROTDIR/gdas.$gymd/$ghh"
export COMIN_GES_ENS="$ROTDIR/enkf.gdas.$gymd/$ghh"
export COMOUT="$ROTDIR/$RUN.$PDY/$cyc"


# #########################################
# DEFINE OUTPUT DATA STYLE  
# #########################################
export OPREFIX="${RUN}.t${cyc}z."
export GPREFIX="gdas.t${ghh}z."
export GSUFFIX=".nemsio"
export APREFIX="${RUN}.t${cyc}z."
export ASUFFIX=".nemsio"


export ATMGES="$COMIN_GES/${GPREFIX}atmf006${GSUFFIX}"
if [ ! -f $ATMGES ]; then
    echo "FILE MISSING: ATMGES = $ATMGES"
    exit 1
fi

if [ $DOHYBVAR = "YES" ]; then
    export ATMGES_ENSMEAN="$COMIN_GES_ENS/${GPREFIX}atmf006.ensmean$GSUFFIX"
    if [ ! -f $ATMGES_ENSMEAN ]; then
        echo "FILE MISSING: ATMGES_ENSMEAN = $ATMGES_ENSMEAN"
        exit 2
    fi
fi

export LEVS=$($NEMSIOGET $ATMGES dimz | awk '{print $2}')
status=$?
[[ $status -ne 0 ]] && exit $status

# Link observational data
export PREPQC="${COMOUT}/${OPREFIX}prepbufr"
export PREPQCPF="${COMOUT}/${OPREFIX}prepbufr.acft_profiles"
[[ $DONST = "YES" ]] && export NSSTBF="${COMOUT}/${OPREFIX}nsstbufr"

# Update surface fields with global_cycle
export DOGCYCLE="YES"

# #########################################
# RUN RELEVANT EXGLOBAL SCRIPT
# #########################################
env
msg="HAS BEGUN on `hostname`"
postmsg "$jlogfile" "$msg"
$LOGSCRIPT


$ANALYSISSH
status=$?
[[ $status -ne 0 ]] && exit $status


if [ $SENDDBN = YES -a $RUN = gdas ] ; then
   $DBNROOT/bin/dbn_alert MODEL GDAS_MSC_abias $job $COMOUT/${PREINP}abias
   $DBNROOT/bin/dbn_alert MODEL GDAS_MSC_abias_pc $job $COMOUT/${PREINP}abias_pc
   $DBNROOT/bin/dbn_alert MODEL GDAS_MSC_abias_air $job $COMOUT/${PREINP}abias_air
fi

cat $pgmout

echo "`hostname`  --  `date`" > $COMOUT/where_ibm_${RUN}_anal_ran.${cycle}

msg="ENDED NORMALLY."
postmsg "$jlogfile" "$msg"


# #########################################
# Remove the Temporary working directory
# #########################################
cd $DATAROOT
if [ ${KEEPDATA:-NO} != YES ] ; then rm -rf $DATA ; fi

date
exit 0
