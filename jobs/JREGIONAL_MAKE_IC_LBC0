#!/bin/bash

#
#-----------------------------------------------------------------------
#
# This script generates:
#
# 1) A NetCDF initial condition (IC) file on a regional grid for the
#    date/time on which the analysis files in the directory specified by
#    INIDIR are valid.  Note that this file does not include data in the
#    halo of this regional grid (that data is found in the boundary con-
#    dition (BC) files).
#
# 2) A NetCDF surface file on the regional grid.  As with the IC file,
#    this file does not include data in the halo.
#
# 3) A NetCDF boundary condition (BC) file containing data on the halo
#    of the regional grid at the initial time (i.e. at the same time as
#    the one at which the IC file is valid).
#
# 4) A NetCDF "control" file named gfs_ctrl.nc that contains infor-
#    mation on the vertical coordinate and the number of tracers for
#    which initial and boundary conditions are provided.
#
# All four of these NetCDF files are placed in the directory specified
# by WORKDIR_ICSLBCS_CDATE, defined as
#
#   WORKDIR_ICSLBCS_CDATE="$WORKDIR_ICSLBCS/$CDATE"
#
# where CDATE is the externally specified starting date and cycle hour
# of the current forecast.
#
#-----------------------------------------------------------------------
#

#
#-----------------------------------------------------------------------
#
# Source the variable definitions script and the function definitions
# file.
#
#-----------------------------------------------------------------------
#
. $SCRIPT_VAR_DEFNS_FP
. $USHDIR/source_funcs.sh
#
#-----------------------------------------------------------------------
#
# Source the file defining the function that will be used to set various
# external-model-related variables.
#
#-----------------------------------------------------------------------
#
. $USHDIR/get_extrn_mdl_file_dir_info.sh
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
{ save_shell_opts; set -u +x; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Set the script name and print out an informational message informing
# the user that we've entered this script.
#
#-----------------------------------------------------------------------
#
script_name=$( basename "$0" )
print_info_msg "\n\
========================================================================
Entering script:  \"${script_name}\"
This is the J-job script for the task that generates initial condition 
(IC), surface, and zeroth hour lateral boundary condition (LBC0) files 
for the FV3 (in NetCDF format).
========================================================================"
#
#-----------------------------------------------------------------------
#
# Set the name of and create the directory in which the output from this
# script will be placed (if it doesn't already exist).
#
#-----------------------------------------------------------------------
#
WORKDIR_ICSLBCS_CDATE="$WORKDIR_ICSLBCS/$CDATE"
WORKDIR_ICSLBCS_CDATE_ICSSURF_WORK="$WORKDIR_ICSLBCS_CDATE/ICSSURF_work"
mkdir_vrfy -p "$WORKDIR_ICSLBCS_CDATE_ICSSURF_WORK"
cd_vrfy ${WORKDIR_ICSLBCS_CDATE_ICSSURF_WORK}
#
#-----------------------------------------------------------------------
#
# Load modules and set machine-dependent parameters.
#
#-----------------------------------------------------------------------
#
case "$MACHINE" in
#
"WCOSS_C")
#
  { save_shell_opts; set +x; } > /dev/null 2>&1

  { restore_shell_opts; } > /dev/null 2>&1
  ;;
#
"WCOSS")
#
  { save_shell_opts; set +x; } > /dev/null 2>&1

  { restore_shell_opts; } > /dev/null 2>&1
  ;;
#
"DELL")
#
  { save_shell_opts; set +x; } > /dev/null 2>&1

  { restore_shell_opts; } > /dev/null 2>&1
  ;;
#
"THEIA")
#
  { save_shell_opts; set +x; } > /dev/null 2>&1

  ulimit -s unlimited
#  ulimit -a

  module purge
  module load intel/18.1.163
  module load impi/5.1.1.109
  module load netcdf/4.3.0
  module load hdf5/1.8.14
  module load wgrib2/2.0.8
  module load contrib wrap-mpi
  module list

  np=${SLURM_NTASKS}
  APRUN="mpirun -np ${np}"

  { restore_shell_opts; } > /dev/null 2>&1
  ;;
#
"HERA")
#
  { save_shell_opts; set +x; } > /dev/null 2>&1

  ulimit -s unlimited
#  ulimit -a

  module purge
  module load intel/18.0.5.274
  module load impi/2018.0.4
  module load netcdf/4.6.1

  module use /scratch1/NCEPDEV/nems/emc.nemspara/soft/modulefiles
  module load esmf/8.0.0bs21

  module use -a /scratch2/NCEPDEV/nwprod/NCEPLIBS/modulefiles
  module load w3nco
  module load nemsio/2.2.3
  module load bacio
  module load sp
  module load sfcio
  module load sigio

  module load wgrib2 
 
  #module contrib wrap-mpi

  module list

  #np=${SLURM_NTASKS}
  #APRUN="mpirun -np ${np}"
  APRUN="srun"

  { restore_shell_opts; } > /dev/null 2>&1
  ;;
#
"JET")
#
  { save_shell_opts; set +x; } > /dev/null 2>&1

  { restore_shell_opts; } > /dev/null 2>&1
  ;;
#
"ODIN")
#
  ;;
#
"CHEYENNE")
#
  ;;
#
esac
#
#-----------------------------------------------------------------------
#
# Call the function that sets various external-model-related variables.
# See the function defintion file for the definitions of these varia-
# bles.
#
#-----------------------------------------------------------------------
#
get_extrn_mdl_file_dir_info \
  extrn_mdl_name="${EXTRN_MDL_NAME_ICSSURF}" \
  anl_or_fcst="ANL" \
  cdate_FV3SAR="${CDATE}" \
  time_offset_hrs="0" \
  varname_extrn_mdl_cdate="EXTRN_MDL_CDATE" \
  varname_extrn_mdl_lbc_update_fhrs="EXTRN_MDL_LBC_UPDATE_FHRS" \
  varname_extrn_mdl_fns="EXTRN_MDL_FNS" \
  varname_extrn_mdl_sysdir="EXTRN_MDL_SYSDIR" \
  varname_extrn_mdl_arcv_fmt="EXTRN_MDL_ARCV_FMT" \
  varname_extrn_mdl_arcv_fns="EXTRN_MDL_ARCV_FNS" \
  varname_extrn_mdl_arcv_fps="EXTRN_MDL_ARCV_FPS" \
  varname_extrn_mdl_arcvrel_dir="EXTRN_MDL_ARCVREL_DIR"
#
#-----------------------------------------------------------------------
#
# Find the directory in which the wgrib2 executable is located.
#
#-----------------------------------------------------------------------
#
WGRIB2_DIR=$( which wgrib2 ) || print_err_msg_exit "${script_name}" "\
Directory in which the wgrib2 executable is located not found:
  WGRIB2_DIR = \"${WGRIB2_DIR}\"
"
#
#-----------------------------------------------------------------------
#
# Set the directory containing the external model output files.
#
#-----------------------------------------------------------------------
#
EXTRN_MDL_FILES_DIR="${EXTRN_MDL_FILES_BASEDIR_ICSSURF}/${CDATE}"
#
#-----------------------------------------------------------------------
#
# Call the ex-script for this J-job and pass to it the necessary varia-
# bles.
#
#-----------------------------------------------------------------------
#
EXTRN_MDL_FNS_str="( "$( printf "\"%s\" " "${EXTRN_MDL_FNS[@]}" )")"

$SCRIPTSDIR/exregional_make_ic_lbc0.sh \
  EXTRN_MDL_FNS="${EXTRN_MDL_FNS_str}" \
  EXTRN_MDL_FILES_DIR="${EXTRN_MDL_FILES_DIR}" \
  EXTRN_MDL_CDATE="${EXTRN_MDL_CDATE}" \
  WGRIB2_DIR="${WGRIB2_DIR}" \
  APRUN="${APRUN}" \
  WORKDIR_ICSLBCS_CDATE="${WORKDIR_ICSLBCS_CDATE}" \
  || print_err_msg_exit "${script_name}" "\
Call to ex-script corresponding to J-job \"${script_name}\" failed."
#
#-----------------------------------------------------------------------
#
# Print exit message.
#
#-----------------------------------------------------------------------
#
print_info_msg "\n\
========================================================================
Exiting script:  \"${script_name}\"
========================================================================"
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/func-
# tion.
#
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1

