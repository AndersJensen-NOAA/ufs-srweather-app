#!/bin/bash

#
#-----------------------------------------------------------------------
#
# This script copies files from various directories into the experiment
# directory, creates links to some of them, and modifies others (e.g. 
# templates) to customize them for the current experiment setup.
#
#-----------------------------------------------------------------------
#

#
#-----------------------------------------------------------------------
#
# Source the variable definitions script and the function definitions
# file.
#
#-----------------------------------------------------------------------
#
. $SCRIPT_VAR_DEFNS_FP
. $USHDIR/source_funcs.sh
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
{ save_shell_opts; set -u -x; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Set the script name and print out an informational message informing
# the user that we've entered this script.
#
#-----------------------------------------------------------------------
#
script_name=$( basename "$0" )
print_info_msg "\n\
========================================================================
Entering script:  \"${script_name}\"
This is the J-job script for the task that runs a forecast with FV3 for 
the specified cycle.
========================================================================"
#
#-----------------------------------------------------------------------
#
# Set and create the run directory for the current cycle.  Then create
# the INPUT and RESTART subdirectories under it.
#
#-----------------------------------------------------------------------
#
RUNDIR="$EXPTDIR/$CDATE"
check_for_preexist_dir $RUNDIR ${preexisting_dir_method}
mkdir_vrfy $RUNDIR

mkdir_vrfy $RUNDIR/INPUT
mkdir_vrfy $RUNDIR/RESTART
#
#-----------------------------------------------------------------------
#
# Set the directory in which the initial condition, surface, and lateral
# boundary condition files are located.
#
#-----------------------------------------------------------------------
#
WORKDIR_ICSLBCS_CDATE="$WORKDIR_ICSLBCS/$CDATE"
#
#-----------------------------------------------------------------------
#
# Change location to the INPUT subdirectory of the current cycle's run 
# directory.
#
#-----------------------------------------------------------------------
#
cd_vrfy $RUNDIR/INPUT
#
#-----------------------------------------------------------------------
#
# Create links in the INPUT subdirectory of the current cycle's run di-
# rectory to the grid and (filtered) orography files.
#
#-----------------------------------------------------------------------
#
print_info_msg_verbose "\
Creating links in the INPUT subdirectory of the current cycle's run di-
rectory to the grid and (filtered) orography files ..."

filename="${CRES}_mosaic.nc"
ln_vrfy -sf -t $RUNDIR/INPUT ../../INPUT/$filename
ln_vrfy -sf $filename grid_spec.nc

filename="${CRES}_grid.tile7.halo${nh3_T7}.nc"
ln_vrfy -sf -t $RUNDIR/INPUT ../../INPUT/$filename
ln_vrfy -sf $filename ${CRES}_grid.tile7.nc

filename="${CRES}_grid.tile7.halo${nh4_T7}.nc"
ln_vrfy -sf -t $RUNDIR/INPUT ../../INPUT/$filename
ln_vrfy -sf $filename grid.tile7.halo${nh4_T7}.nc

filename="${CRES}_oro_data.tile7.halo${nh4_T7}.nc"
ln_vrfy -sf -t $RUNDIR/INPUT ../../INPUT/$filename
ln_vrfy -sf $filename oro_data.tile7.halo${nh4_T7}.nc

filename="${CRES}_oro_data.tile7.halo${nh0_T7}.nc"
ln_vrfy -sf -t $RUNDIR/INPUT ../../INPUT/$filename
ln_vrfy -sf $filename oro_data.nc
#
#-----------------------------------------------------------------------
#
# Copy initial condition, surface, and lateral boundary condition files
# from the directory in which they were created to the INPUT subdirecto-
# ry of the current cycle's run directory and create symlinks in this
# INPUT subdirectory to these files.
#
#-----------------------------------------------------------------------
#
# NOTE: Might want to change these to symlinks, or (even better) make
# the IC/surface/initial-LBC generation tasks place them in the INPUT 
# subdirectory of the appropriate cycle's run directory.
print_info_msg_verbose "\
Copying initial condition, surface, and lateral boundary condition files
from the directory in which they were created to the INPUT subdirectory
of the current cycle's run directory and creating links..."
#
#-----------------------------------------------------------------------
#
# The FV3 model looks for a file named "gfs_data.nc" from which to read
# in the initial conditions (ICs) with a 4-cell-wide halo.  This data is
# generated by the IC/surface/initial-LBC generation task and stored in
# a file with a name ("gfs_data.tile7.nc") that is different than the 
# one that FV3 expects.  Thus, we first copy this file to the INPUT sub-
# directory of the run directory and then create a symlink named "gfs_-
# data.nc" that points to it.
#
#-----------------------------------------------------------------------
#
cp_vrfy $WORKDIR_ICSLBCS_CDATE/gfs_data.tile7.nc .
ln_vrfy -sf gfs_data.tile7.nc gfs_data.nc
#
#-----------------------------------------------------------------------
#
# The FV3 model looks for a file named "sfc_data.nc" from which to read
# in the surface fields (without a halo).  This data is generated by the
# IC/surface/initial-LBC generation task and is stored in a file with a
# name ("sfc_data.tile7.nc") that is different than the one that FV3 ex-
# pects.  Thus, we first copy this file to the INPUT subdirectory of the
# run directory and then create a symlink named "sfc_data.nc" that 
# points to it.
#
#-----------------------------------------------------------------------
#
cp_vrfy $WORKDIR_ICSLBCS_CDATE/sfc_data.tile7.nc .
ln_vrfy -sf sfc_data.tile7.nc sfc_data.nc
#
#-----------------------------------------------------------------------
#
# Copy the lateral boundary condition (LBC) files -- one per boundary 
# update time -- to the INPUT subdirectory of the run directory.  Note
# that these already have the names that FV3 expects, so there is no 
# need to create symlinks.
#
#-----------------------------------------------------------------------
#
cp_vrfy $WORKDIR_ICSLBCS_CDATE/gfs_bndy*.nc .
#
#-----------------------------------------------------------------------
#
# Copy the file gfs_ctrl.nc containing information about the vertical
# coordinate and the number of tracers to the INPUT subdirectory of the
# run directory.
#
#-----------------------------------------------------------------------
#
cp_vrfy $WORKDIR_ICSLBCS_CDATE/gfs_ctrl.nc .
#
#-----------------------------------------------------------------------
#
# Create links in the current cycle's run directory to "fix" files in 
# the main experiment directory.
#
#-----------------------------------------------------------------------
#
cd_vrfy $RUNDIR

print_info_msg_verbose "\
Creating links in the current cycle's run directory to static (fix) 
files in the main experiment directory..."

ln_vrfy -sf -t $RUNDIR ../CFSR.SEAICE.1982.2012.monthly.clim.grb
ln_vrfy -sf -t $RUNDIR ../RTGSST.1982.2012.monthly.clim.grb
ln_vrfy -sf -t $RUNDIR ../seaice_newland.grb
ln_vrfy -sf -t $RUNDIR ../aerosol.dat
ln_vrfy -sf -t $RUNDIR ../global_albedo4.1x1.grb
ln_vrfy -sf -t $RUNDIR ../global_glacier.2x2.grb
ln_vrfy -sf -t $RUNDIR ../global_h2oprdlos.f77
ln_vrfy -sf -t $RUNDIR ../global_maxice.2x2.grb
ln_vrfy -sf -t $RUNDIR ../global_mxsnoalb.uariz.t126.384.190.rg.grb
ln_vrfy -sf -t $RUNDIR ../global_o3prdlos.f77
ln_vrfy -sf -t $RUNDIR ../global_shdmax.0.144x0.144.grb
ln_vrfy -sf -t $RUNDIR ../global_shdmin.0.144x0.144.grb
ln_vrfy -sf -t $RUNDIR ../global_slope.1x1.grb
ln_vrfy -sf -t $RUNDIR ../global_snoclim.1.875.grb
ln_vrfy -sf -t $RUNDIR ../global_snowfree_albedo.bosu.t126.384.190.rg.grb
ln_vrfy -sf -t $RUNDIR ../global_soilmgldas.t126.384.190.grb
ln_vrfy -sf -t $RUNDIR ../global_soiltype.statsgo.t126.384.190.rg.grb
ln_vrfy -sf -t $RUNDIR ../global_tg3clim.2.6x1.5.grb
ln_vrfy -sf -t $RUNDIR ../global_vegfrac.0.144.decpercent.grb
ln_vrfy -sf -t $RUNDIR ../global_vegtype.igbp.t126.384.190.rg.grb
ln_vrfy -sf -t $RUNDIR ../global_zorclim.1x1.grb
ln_vrfy -sf -t $RUNDIR ../sfc_emissivity_idx.txt
ln_vrfy -sf -t $RUNDIR ../solarconstant_noaa_an.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_2010.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_2011.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_2012.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_2013.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_2014.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_2015.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_2016.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_2017.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_2018.txt
ln_vrfy -sf -t $RUNDIR ../co2historicaldata_glob.txt
ln_vrfy -sf -t $RUNDIR ../co2monthlycyc.txt
#
#-----------------------------------------------------------------------
#
# Create links in the current cycle's run directory to cycle-independent
# model input files in the main experiment directory.
#
#-----------------------------------------------------------------------
#

# Should these also be copied to the cycle's run directory from the templates directory (especially if they're not modified?

print_info_msg_verbose "\
Creating links in the current cycle's run directory to cycle-independent
model input files in the main experiment directory..."

ln_vrfy -sf -t $RUNDIR ../${FV3_NML_FN}
ln_vrfy -sf -t $RUNDIR ../${DATA_TABLE_FN}
ln_vrfy -sf -t $RUNDIR ../${FIELD_TABLE_FN}
ln_vrfy -sf -t $RUNDIR ../${NEMS_CONFIG_FN}

if [ "$CCPP" = "true" ]; then
  ln_vrfy -sf -t $RUNDIR ../module-setup.sh
  ln_vrfy -sf -t $RUNDIR ../modules.fv3
  if [ "$CCPP_phys_suite" = "GSD" ]; then
    ln_vrfy -sf -t $RUNDIR ../suite_FV3_GSD_v0.xml
  elif [ "$CCPP_phys_suite" = "GFS" ]; then
    ln_vrfy -sf -t $RUNDIR ../suite_FV3_GFS_2017_gfdlmp.xml
  fi
  if [ "$CCPP_phys_suite" = "GSD" ]; then
    ln_vrfy -sf -t $RUNDIR ../CCN_ACTIVATE.BIN
  fi
fi
#
#-----------------------------------------------------------------------
#
# Copy cycle-independent model input files from the templates directory 
# to the current cycle's run directory.
#
#-----------------------------------------------------------------------
#

# If these are cycle-independent, why not copy them once to the main 
# experiment directory and then create links to them, as above???
print_info_msg_verbose "\
Copying cycle-independent model input files from the templates directory 
to the current cycle's run directory..." 

cp_vrfy ${TEMPLATE_DIR}/${MODEL_CONFIG_FN} $RUNDIR

if [ "$CCPP" = "true" ]; then
  if [ "${CCPP_phys_suite}" = "GFS" ]; then
    cp_vrfy ${TEMPLATE_DIR}/${DIAG_TABLE_FN} $RUNDIR
  elif [ "$CCPP_phys_suite" = "GSD" ]; then
    cp_vrfy ${TEMPLATE_DIR}/${DIAG_TABLE_CCPP_GSD_FN} $RUNDIR/${DIAG_TABLE_FN}
  fi
elif [ "$CCPP" = "false" ]; then
  cp_vrfy ${TEMPLATE_DIR}/${DIAG_TABLE_FN} $RUNDIR
fi
#
#-----------------------------------------------------------------------
#
# Call the ex-script for this J-job and pass to it the necessary varia-
# bles.
#
#-----------------------------------------------------------------------
#
$SCRIPTSDIR/exregional_run_fv3.sh \
  RUNDIR="${RUNDIR}"
#
#-----------------------------------------------------------------------
#
# Print exit message.
#
#-----------------------------------------------------------------------
#
print_info_msg "\n\
========================================================================
Exiting script:  \"${script_name}\"
========================================================================"
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/func-
# tion.
#
#-----------------------------------------------------------------------
#
{ restore_shell_opts; } > /dev/null 2>&1

