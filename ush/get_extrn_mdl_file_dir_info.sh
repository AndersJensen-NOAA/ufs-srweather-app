#
#-----------------------------------------------------------------------
#
# Source the variable definitions script.                                                                                                         
#
#-----------------------------------------------------------------------
#
#. $SCRIPT_VAR_DEFNS_FP
#
#-----------------------------------------------------------------------
#
# Source function definition files.
#
#-----------------------------------------------------------------------
#
#. $USHDIR/source_funcs.sh
#
#-----------------------------------------------------------------------
#
# This file defines a function that is used to form the names of the 
# files generated by the specified external model that are needed to 
# generate NetCDF files containing surface and initial condition or la-
# teral boundary condition fields for the FV3SAR.  It is called as fol-
# lows:
#
#   iselemof "$str_to_match" array_name
#
# where $str_to_match is the string to find in the array array_name.
# Use this function in a script as follows:
#
#   . ./iselementof.sh
#   array_name=("1" "2" "3 4" "5")
#
#   str_to_match="2"
#   iselementof "$str_to_match" array_name
#   echo $?  # Should output 0.
#
#   str_to_match="3 4"
#   iselementof "$str_to_match" array_name
#   echo $?  # Should output 0.
#
#   str_to_match="6"
#   iselementof "$str_to_match" array_name
#   echo $?  # Should output 1.
#
# Note that the first argument to this function is the array name (with-
# out a "$" before it or "[@]" after it).
# 
#-----------------------------------------------------------------------
#
function get_extrn_mdl_file_dir_info () {
#
#-----------------------------------------------------------------------
#
# Save current shell options (in a global array).  Then set new options
# for this script/function.
#
#-----------------------------------------------------------------------
#
  { save_shell_opts; set -u -x; } > /dev/null 2>&1
#
#-----------------------------------------------------------------------
#
# Declare local variables and set some.
#
#-----------------------------------------------------------------------
#
  local extrn_mdl="$1"
  local anl_or_fcst="$2"
  local cdate="$3"
  local output_fn="$4"
  local glob_var_name_filenames="$5"
  local glob_var_name_arcv_file_fmt="$6"
  local glob_var_name_arcv_filepath="$7"
  local glob_var_name_arcvrel_dir="$8"
  local glob_var_name_extrn_mdl_files_sysdir="$9"

  local yyyy mm dd hh mn yyyymmdd \
        yy ddd hh_fcst mn_fcst \
        filenames prefix suffix \
        arcv_dir arcv_file_fmt arcv_filename arcv_filepath arcvrel_dir
#
#-----------------------------------------------------------------------
#
# Extract from cdate the starting year, month, day, and hour of the cy-
# cle.  Also, set the starting minute to "00" and get the date without 
# the time-of-day.  These are needed below in setting various directory
# and file names.
#
#-----------------------------------------------------------------------
#
  yyyy=${cdate:0:4}
  mm=${cdate:4:2}
  dd=${cdate:6:2}
  hh=${cdate:8:2}
  mn="00"
  yyyymmdd=${cdate:0:8}
#
#-----------------------------------------------------------------------
#
# Set additional parameters needed in forming the names of RAP and HRRR
# output files.
#
#-----------------------------------------------------------------------
#
  if [ $extrn_mdl = "RAPX" ] || \
     [ $extrn_mdl = "HRRRX" ]; then
#
# Get the Julian day of the starting date of the cycle.
#
    ddd=$( date -d "${yyyy}-${mm}-${dd} ${hh}:${mn} UTC" "+%j" )
#
# Get the last two digits of the starting date's year.
#
    yy=${yyyy:2:4}
#
# Set the forecast hour and minute.  This depends on whether we want the
# analysis or forecast files.
#
#    if [ "$anl_or_fcst" = "anl" ]; then
#      hh_fcst="00"
#      mn_fcst="00"
#    elif [ "$anl_or_fcst" = "fcst" ]; then
#      hh_fcst="00"
#      mn_fcst="00"
#    fi

  fi
#
#-----------------------------------------------------------------------
#
# Set the system directory (a location on disk) in which to look for the
# GFS output files.
#
#-----------------------------------------------------------------------
#
  case $anl_or_fcst in
#
#-----------------------------------------------------------------------
#
# Consider analysis files (including surface files).
#
#-----------------------------------------------------------------------
#
  "anl")

    hh_fcst="00"
    mn_fcst="00"

    case $extrn_mdl in
#
    "GFS")
#      filenames=( "atm" "sfc" "nst" )
      filenames=( "atm" "sfc" )
      prefix="gfs.t${hh}z."
      filenames=( "${filenames[@]/#/$prefix}" )
      suffix="anl.nemsio"
      filenames=( "${filenames[@]/%/$suffix}" )
      ;;
#
    "RAPX")
      filenames=( "${yy}${ddd}${hh}${mn}${hh_fcst}${mn_fcst}" )
      ;;
#
    "HRRRX")
      filenames=( "${yy}${ddd}${hh}${mn}${hh_fcst}${mn_fcst}" )
      ;;
#
    *)
      print_err_msg_exit "\
The external model file names have not yet been specified for this com-
bination of external model (extrn_mdl) and analysis/forecast (anl_or_-
fcst):
  extrn_mdl = \"$extrn_mdl\"
  anl_or_fcst = \"$anl_or_fcst\"
"
      ;;
#
    esac
    ;;
#
#-----------------------------------------------------------------------
#
# Consider forecast files.
#
#-----------------------------------------------------------------------
#
  "fcst")

#    hh_fcst="00"
    mn_fcst="00"

    case $extrn_mdl in
#
    "GFS")
      hhh_fcst=( $( printf "%03d " "${BC_update_times_hrs[@]:1}" ) )
#      filenames=( $( printf "%03d " "${BC_update_times_hrs[@]:1}" ) )
      prefix="gfs.t${hh}z.atmf"
#      filenames=( "${filenames[@]/#/$prefix}" )
      filenames=( "${hhh_fcst[@]/#/$prefix}" )
      suffix=".nemsio"
      filenames=( "${filenames[@]/%/$suffix}" )
      ;;
#
    "RAPX")
      hh_fcst=( $( printf "%02d " "${BC_update_times_hrs[@]:1}" ) )
#      filenames=( "${yy}${ddd}${hh}${mn}${hh_fcst}${mn_fcst}" )
      prefix="${yy}${ddd}${hh}${mn}"
      filenames=( "${hh_fcst[@]/#/$prefix}" )
      suffix="${mn_fcst}"
      filenames=( "${filenames[@]/%/$suffix}" )
      ;;
#
    "HRRRX")
      hh_fcst=( $( printf "%02d " "${BC_update_times_hrs[@]:1}" ) )
#      filenames=( "${yy}${ddd}${hh}${mn}${hh_fcst}${mn_fcst}" )
      prefix="${yy}${ddd}${hh}${mn}"
      filenames=( "${hh_fcst[@]/#/$prefix}" )
      suffix="${mn_fcst}"
      filenames=( "${filenames[@]/%/$suffix}" )
      ;;
#
    *)
      print_err_msg_exit "\
The external model file names have not yet been specified for this com-
bination of external model (extrn_mdl) and analysis/forecast (anl_or_-
fcst):
  extrn_mdl = \"$extrn_mdl\"
  anl_or_fcst = \"$anl_or_fcst\"
"
      ;;
#
    esac
    ;;
#
  *) 
    print_err_msg_exit "\
Value specified for \"anl_or_fcst\" is not supported:
  anl_or_fcst = \"$anl_or_fcst\"
"
    ;;
#
  esac
#
#-----------------------------------------------------------------------
#
# If the data source is the mass store (HPSS), then also set parameters
# related to 
#
#-----------------------------------------------------------------------
#
  case $extrn_mdl in

  "GFS")
    arcv_dir="/NCEPPROD/hpssprod/runhistory/rh${yyyy}/${yyyy}${mm}/${yyyymmdd}"
    arcv_file_fmt="tar"
    arcv_filename="gpfs_hps_nco_ops_com_gfs_prod_gfs.${cdate}."
    if [ $anl_or_fcst = "anl" ]; then
      arcv_filename="${arcv_filename}anl"
      arcvrel_dir="."
    elif [ $anl_or_fcst = "fcst" ]; then
      arcv_filename="${arcv_filename}sigma"
      arcvrel_dir="/gpfs/hps/nco/ops/com/gfs/prod/gfs.${yyyymmdd}"
    fi
    arcv_filename="${arcv_filename}.${arcv_file_fmt}"
    arcv_filepath="$arcv_dir/$arcv_filename"
    ;;

  "RAPX")
    arcv_dir="/BMC/fdr/Permanent/${yyyy}/${mm}/${dd}/data/fsl/hrrr/conus/wrfnat"
    arcv_file_fmt="zip"
    arcv_filename="${yyyy}${mm}${dd}${hh}00.${arcv_file_fmt}"
    arcv_filepath="$arcv_dir/$arcv_filename"
    arcvrel_dir=""
    ;;

  "HRRRX")
    arcv_dir="/BMC/fdr/Permanent/${yyyy}/${mm}/${dd}/data/fsl/hrrr/conus/wrfnat"
    arcv_file_fmt="zip"
    arcv_filename="${yyyy}${mm}${dd}${hh}00.${arcv_file_fmt}"
    arcv_filepath="$arcv_dir/$arcv_filename"
    arcvrel_dir=""
    ;;

  *)
    print_err_msg_exit "\
The archive directory and filename have not been specified for this com-
bination of external model (extrn_mdl) and analysis/forecast (anl_or_-
fcst):
  extrn_mdl = \"$extrn_mdl\"
  anl_or_fcst = \"$anl_or_fcst\"
"
    ;;

  esac
#
#-----------------------------------------------------------------------
#
#
#
#-----------------------------------------------------------------------
#
  if [ "$anl_or_fcst" = "anl" ]; then
    sysbasedir="$EXTRN_MDL_FILES_SYSBASEDIR_ICSSURF"
  elif [ "$anl_or_fcst" = "fcst" ]; then
    sysbasedir="$EXTRN_MDL_FILES_SYSBASEDIR_LBCS"
  fi

  case $extrn_mdl in

  "GFS")
    case $MACHINE in
    "WCOSS_C")
      extrn_mdl_files_sysdir="$sysbasedir/gfs.${yyyymmdd}"
      ;;
    "THEIA")
      extrn_mdl_files_sysdir="$sysbasedir/gfs.${yyyymmdd}"
      ;;
    "JET")
      extrn_mdl_files_sysdir="$sysbasedir/${yyyymmdd}"
      ;;
    "ODIN")
      extrn_mdl_files_sysdir="$sysbasedir/${yyyymmdd}"
      ;;
    *)
      print_err_msg_exit "\
The system directory in which to look for external model output files 
has not been specified for this external model and machine combination:
  extrn_mdl = \"$extrn_mdl\"
  MACHINE = \"$MACHINE\"
"
      ;;
    esac
    ;;

  "RAPX")
    case $MACHINE in
    "WCOSS_C")
      extrn_mdl_files_sysdir="$sysbasedir"
      ;;
    "THEIA")
      extrn_mdl_files_sysdir="$sysbasedir"
      ;;
    "JET")
      extrn_mdl_files_sysdir="$sysbasedir"
      ;;
    "ODIN")
      extrn_mdl_files_sysdir="$sysbasedir"
      ;;
    *)
      print_err_msg_exit "\
The system directory in which to look for external model output files 
has not been specified for this external model and machine combination:
  extrn_mdl = \"$extrn_mdl\"
  MACHINE = \"$MACHINE\"
"
      ;;
    esac
    ;;

  "HRRRX")
    case $MACHINE in
    "WCOSS_C")
      extrn_mdl_files_sysdir="$sysbasedir"
      ;;
    "THEIA")
      extrn_mdl_files_sysdir="$sysbasedir"
      ;;
    "JET")
      extrn_mdl_files_sysdir="$sysbasedir"
      ;;
    "ODIN")
      extrn_mdl_files_sysdir="$sysbasedir"
      ;;
    *)
      print_err_msg_exit "\
The system directory in which to look for external model output files 
has not been specified for this external model and machine combination:
  extrn_mdl = \"$extrn_mdl\"
  MACHINE = \"$MACHINE\"
"
      ;;
    esac
    ;;

  *)
    print_err_msg_exit "\
The archive directory and filename have not been specified for this com-
bination of external model (extrn_mdl) and analysis/forecast (anl_or_-
fcst):
  extrn_mdl = \"$extrn_mdl\"
  anl_or_fcst = \"$anl_or_fcst\"
"

  esac
#
#-----------------------------------------------------------------------
#
# Set results to appropriate global variables.
#
#-----------------------------------------------------------------------
#

#  EXTRN_MDL_FNS=( $( printf "%s " "${filenames[@]}" ) )
#  ARCV_FILE_FMT="$arcv_file_fmt"
#  ARCV_FP="$arcv_filepath"
#  ARCVREL_DIR="$arcvrel_dir"
#  EXTRN_MDL_FILES_SYSDIR="$extrn_mdl_files_sysdir"

  { cat << EOM > $output_fn
$glob_var_name_filenames=( $( printf "\"%s\" " "${filenames[@]}" ))
$glob_var_name_arcv_file_fmt="$arcv_file_fmt"
$glob_var_name_arcv_filepath="$arcv_filepath"
$glob_var_name_arcvrel_dir="$arcvrel_dir"
$glob_var_name_extrn_mdl_files_sysdir="$extrn_mdl_files_sysdir"
EOM
  } || print_err_msg_exit "\
Heredoc (cat) command to store output variable values to file returned 
with a nonzero status.
"
#
#-----------------------------------------------------------------------
#
# Restore the shell options saved at the beginning of this script/func-
# tion.
#
#-----------------------------------------------------------------------
#
  { restore_shell_opts; } > /dev/null 2>&1
}
