#!/bin/ksh -x

########## config.vrfy ##########
# Verification step specific

echo "BEGIN: config.vrfy"

# Get task specific resources
. $EXPDIR/config.resources vrfy

export VDUMP="gfs"       # verifying dump
export CDUMPFCST="gdas"  # Fit-to-obs with GDAS/GFS prepbufr
export CDFNL="gdas"      # Scores verification against GDAS/GFS analysis

export VSDB_STEP1="YES"  # populate VSDB database
export VSDB_STEP2="NO"
export VRFYG2OBS="YES"   # Grid to observations, see note below if turning ON
export VRFYFITS="YES"    # Fit to observations
export VRFYPRCP="YES"    # Precip threat scores
export VRFYMINMON="YES"  # GSI minimization monitoring
export VRFYRAD="YES"     # Radiance data assimilation monitoring
export VRFYOZN="YES"     # Ozone data assimilation monitoring
export VRFYTRAK="YES"    # Hurricane track forecasts
export VRFYGENESIS="YES" # Cyclone genesis
export VRFYGMPK="NO"     # Gempak verification

# Fit to Observations
if [ $VRFYFITS = "YES" ]; then

    if [ $machine = "WCOSS_C" ]; then
        export fitdir="$BASE_SVN/verif/global/parafits.fv3nems/batrun"
        export PREPQFITSH="$fitdir/subfits_cray_nems"
    elif [ $machine = "THEIA" ]; then
        export fitdir="$BASE_SVN/verif/global/parafits.fv3nems/batrun"
        export PREPQFITSH="$fitdir/subfits_theia_nems"
    fi

fi

# VSDB STEP1, Verify Precipipation and Grid To Obs options
# All these call $VSDBSH
if [[ "$CDUMP" = "gfs" ]] ; then
    ddd=`echo $CDATE |cut -c 1-8`
    #if [ $ddd -eq 5 -o $ddd -eq 10 ]; then export VSDB_STEP2 = "YES" ;fi

    if [ $VSDB_STEP1 = "YES" -o $VSDB_STEP2 = "YES" -o $VRFYPRCP = "YES" -o $VRFYG2OBS = "YES" ]; then
        export BACKDATEVSDB=24                          # execute vsdbjob for the previous day
        export VBACKUP_PRCP=24                          # back up for QPF verification data
        export vsdbsave="$NOSCRUB/archive/vsdb_data"    # place to save vsdb database
        export vsdbhome=$BASE_VERIF                     # location of global verification scripts
        export VSDBSH="$vsdbhome/vsdbjob.sh"            # VSDB job script
        export vlength=$FHMAX_GFS                       # verification length
        export vhr_rain=$FHMAX_GFS                      # verification length for precip
        export ftyplist="pgbq"                          # verif. files used for computing QPF ETS scores
        export anltype="gfs"                            # default=gfs, analysis type (gfs or gdas) for verification
        if [ ${lprecip_accu:-".false."} = ".true." ]; then
            export rain_bucket=0
        else
            export rain_bucket=${FHZER:-6}
        fi

        export VSDB_START_DATE="$SDATE"                 # starting date for vsdb maps
        export webhost="emcrzdm.ncep.noaa.gov"          # webhost(rzdm) computer
        export webhostid="$USER"                        # webhost(rzdm) user name
        export SEND2WEB="NO"                            # whether or not to send maps to webhost
        export WEBDIR="/home/people/emc/www/htdocs/gmb/${webhostid}/vsdb/$PSLOT"
        export mdlist="gfs $PSLOT "                     # exps (up to 10) to compare in maps
    fi
fi


# Minimization, Radiance and Ozone Monitoring
if [ $VRFYRAD = "YES" -o $VRFYMINMON = "YES" -o $VRFYOZN = "YES" ]; then

    export envir="para"

    # Radiance Monitoring
    if [[ "$VRFYRAD" == "YES" && "$CDUMP" == "$CDFNL" ]] ; then

        export RADMON_SUFFIX=$PSLOT
        export TANKverf="$NOSCRUB/radmon"
        if [ $machine = "WCOSS_C" -o $machine = "THEIA" ]; then
            export VRFYRADSH="$HOMEgfs/jobs/JGDAS_VERFRAD"
        else
            echo "WARNING: Radiance monitoring is not enabled on $machine!"
            export VRFYRAD="NO"
        fi

    fi

    # Minimization Monitoring
    if [[ "$VRFYMINMON" = "YES" ]] ; then

        export MINMON_SUFFIX=$PSLOT
        export M_TANKverf="$NOSCRUB/minmon"
        if [[ "$machine" == "WCOSS_C" || "$machine" == "THEIA" ]] ; then
            if [[ "$CDUMP" = "gdas" ]] ; then
                export VRFYMINSH="$HOMEgfs/jobs/JGDAS_VMINMON"
            elif [[ "$CDUMP" = "gfs" ]] ; then
                export VRFYMINSH="$HOMEgfs/jobs/JGFS_VMINMON"
            fi
        else
            echo "WARNING: Minimization monitoring is not enabled on $machine!"
            export VRFYMINMON="NO"
        fi

    fi

    # Ozone Monitoring
    if [[ "$VRFYOZN" == "YES" && "$CDUMP" == "$CDFNL" ]] ; then

        export HOMEgfs_ozn="$HOMEgfs"
        export OZNMON_SUFFIX=$PSLOT
        export TANKverf_ozn="$NOSCRUB/oznmon"
        if [ $machine = "WCOSS_C" -o $machine = "THEIA" ]; then
            export VRFYOZNSH="$HOMEgfs/jobs/JGDAS_VERFOZN"
        else
            echo "WARNING: Ozone monitoring is not enabled on $machine!"
            export VRFYOZN="NO"
        fi

    fi

fi

# Cyclone track verification
if [ $VRFYTRAK = "YES" ]; then

    export TRACKERSH="$HOMEgfs/ush/global_tracker.sh"
    export PARATRKR="$HOMEgfs/ush/global_extrkr.sh"
    export GETTRKEXEC="$HOMEgfs/exec/gettrk"
    export GETTX=$GETTRKEXEC
    export SUPVX="$HOMEgfs/exec/supvit"
    export HOMERELO=$HOMEgfs
    export homesyndir=$HOMEgfs
    if [[ "$CDUMP" = "gfs" ]] ; then
        export FHOUT=$FHOUT_GFS
        export FHMAX=$FHMAX_GFS
        export FHMAX2=${FHMAX2_GFS:-$FHMAX_GFS} # We don't run FCST2
    fi
    if [ $machine = "THEIA" ]; then
       export COMROOTp1="/scratch4/NCEPDEV/rstprod/com"
       export archsyndir="$COMROOTp1/arch/prod/syndat"
       export prep_step="$NWPROD/prod_util.v1.0.15/ush/prep_step"
    fi
fi

# Cyclone genesis verification
if [ $VRFYGENESIS = "YES" ]; then

    if [ $machine = "WCOSS_C" ] ; then
        export ens_tracker_ver=v1.1.12
        export HOMEens_tracker=/gpfs/hps/nco/ops/nwpara/ens_tracker.${ens_tracker_ver}
        export GENESISSH="$HOMEens_tracker/jobs/JGFS_TC_GENESIS"
    elif [ $machine = "THEIA" ] ; then
        export NWROOTGENESIS="/scratch4/NCEPDEV/global/save/glopara/svn/gfs/branches/gfs_q3fy17"
        export GENESISSH="$NWROOTGENESIS/ens_tracker.v2.0.1/gfs_genesis_para_fv3gfs.sh"	
        export UTILROOT="/scratch4/NCEPDEV/global/save/glopara/nwpara/prod_util.v1.0.15"
        export GETTX_GEN="$NWROOTGENESIS/ens_tracker.v2.0.1/exec/gettrk_gen_g2_theia"
    else
        echo "WARNING: Genesis verification is not enabled on $machine!"
        export VRFYGENESIS="NO"
        export GENESISSH=""
    fi

fi

echo "END: config.vrfy"
